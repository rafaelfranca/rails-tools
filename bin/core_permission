#!/usr/bin/env ruby
require 'bundler/setup'
require 'thor'
require 'yaml'

class CorePermission < Thor
  include Thor::Actions

  GEMS = %w(
    actioncable
    actionmailbox
    actionmailer
    actionpack
    actionpack-action_caching
    actionpack-page_caching
    actionpack-xml_parser
    actiontext
    actionview
    activejob
    activemodel
    activemodel-serializers-xml
    activerecord
    activerecord-deprecated_finders
    activerecord-session_store
    activeresource
    activestorage
    activesupport
    activesupport-json_encoder
    arel
    coffee-rails
    coffee-script
    execjs
    globalid
    jbuilder
    jquery-rails
    kredis
    protected_attributes
    prototype-rails
    rails
    rails-controller-testing
    rails-deprecated_sanitizer
    rails-dom-testing
    rails-html-sanitizer
    rails-observers
    rails-perftest
    rails-ujs
    railties
    record_tag_helper
    sass-rails
    spring
    sprockets
    sprockets-rails
    turbolinks
    web-console
    webpacker
    jsbundling-rails
    cssbundling-rails
    importmap-rails
    tailwindcss-rails
    marcel
    thor
    propshaft
  )

  desc "add EMAIL", "Add an user to all Rails gems"
  method_option :gems, type: :array, desc: "The gems that you want to give permission", default: GEMS
  def add(email)
    options[:gems].each do |gem|
      run("gem owner --add #{email} #{gem}")
    end
  end

  desc "remove EMAIL", "Remove an user to all Rails gems"
  method_option :gems, type: :array, desc: "The gems that you want to remove permission", default: GEMS
  def remove(email)
    options[:gems].each do |gem|
      run("gem owner --remove #{email} #{gem}")
    end
  end

  desc "add_gem GEM", "Add a gem to Rails Core"
  def add_gem(gem)
    emails = YAML.load(File.read(File.expand_path('../config/emails.yml', __dir__)))['core']
    emails.each do |email|
      run("gem owner --add #{email} #{gem}")
    end
  end
end

CorePermission.start
